Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('DefaultSignatures00001')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    CLASSDECL
      PsiElement(HaskellTokenType.class)('class')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Foo')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')
      PsiElement(HaskellTokenType.where)('where')
      CDECL
        GENDECL
          VARS
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('foo')
          PsiElement(HaskellTokenType.::)('::')
          CTYPE
            TYPEE
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('a')
              PsiElement(HaskellTokenType.->)('->')
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('String')
      CDECL
        PsiElement(HaskellTokenType.default)('default')
        GENDECL
          VARS
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('foo')
          PsiElement(HaskellTokenType.::)('::')
          CTYPE
            CLSCONTEXT
              ATYPE
                PsiElement(HaskellTokenType.()('(')
                CTYPE
                  TYPEE
                    ATYPE
                      OQTYCON
                        QTYCON
                          TYCON
                            CONID
                              PsiElement(HaskellTokenType.conidRegexp)('Show')
                    ATYPE
                      TYVAR
                        VARID
                          PsiElement(HaskellTokenType.varidRegexp)('a')
                PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.=>)('=>')
            CTYPE
              TYPEE
                ATYPE
                  TYVAR
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('a')
                PsiElement(HaskellTokenType.->)('->')
                TYPEE
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('String')
      CDECL
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('foo')
        RHS
          PsiElement(HaskellTokenType.=)('=')
          EXP
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('show')