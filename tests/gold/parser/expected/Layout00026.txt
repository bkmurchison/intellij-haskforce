Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Gold')
      PsiElement(HaskellTokenType..)('.')
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Parser')
      PsiElement(HaskellTokenType..)('.')
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Layout00026')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Data')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Text')
      PsiElement(HaskellTokenType.()('(')
      IMPORTT
        TYCON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Text')
      PsiElement(HaskellTokenType.))(')')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('GHC')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Generics')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Foo')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Types')
      PsiElement(HaskellTokenType.()('(')
      IMPORTT
        TYCON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Id')
      PsiElement(HaskellTokenType.))(')')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Bar')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Types')
      PsiElement(HaskellTokenType.()('(')
      IMPORTT
        TYCON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Person')
      PsiElement(HaskellTokenType.))(')')
    IMPDECL
      PsiElement(HaskellTokenType.import)('import')
      PsiElement(HaskellTokenType.qualified)('qualified')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Data')
        PsiElement(HaskellTokenType..)('.')
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Aeson')
      PsiElement(HaskellTokenType.as)('as')
      QCONID
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Aeson')
    DATADECL
      PsiElement(HaskellTokenType.data)('data')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Elem')
      PsiElement(HaskellTokenType.=)('=')
      CONSTR
        CON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Elem')
        PsiElement(HaskellTokenType.{)('{')
        VARS
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('name')
        PsiElement(HaskellTokenType.::)('::')
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Text')
        PsiElement(HaskellTokenType.,)(',')
        VARS
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('person')
        PsiElement(HaskellTokenType.::)('::')
        TYPEE
          ATYPE
            PsiElement(HaskellTokenType.()('(')
            CTYPE
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('Id')
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('Person')
            PsiElement(HaskellTokenType.))(')')
        PsiElement(HaskellTokenType.})('}')
      PsiElement(HaskellTokenType.deriving)('deriving')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('stock')
      PsiElement(HaskellTokenType.()('(')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Show')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Generic')
      PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.deriving)('deriving')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('anyclass')
      PsiElement(HaskellTokenType.()('(')
      QTYCLS
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Aeson')
        PsiElement(HaskellTokenType..)('.')
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('ToJSON')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Aeson')
        PsiElement(HaskellTokenType..)('.')
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('FromJSON')
      PsiElement(HaskellTokenType.))(')')
    TYPEDECL
      PsiElement(HaskellTokenType.type)('type')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Foo')
        ATYPE
          TYVAR
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('f')
      PsiElement(HaskellTokenType.=)('=')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Baz')
        ATYPE
          PsiElement(HaskellTokenType.()('(')
          CTYPE
            TYPEE
              ATYPE
                OQTYCON
                  QTYCON
                    TYCON
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Spam')
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('f')
          PsiElement(HaskellTokenType.))(')')
    TYPEDECL
      PsiElement(HaskellTokenType.type)('type')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Bar')
        ATYPE
          TYVAR
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('f')
      PsiElement(HaskellTokenType.=)('=')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Baz')
        ATYPE
          PsiElement(HaskellTokenType.()('(')
          CTYPE
            TYPEE
              ATYPE
                OQTYCON
                  QTYCON
                    TYCON
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Eggs')
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('f')
          PsiElement(HaskellTokenType.))(')')
    DATADECL
      PsiElement(HaskellTokenType.data)('data')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Baz')
        ATYPE
          TYVAR
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('v')
      PsiElement(HaskellTokenType.=)('=')
      CONSTR
        CON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Baz')
        PsiElement(HaskellTokenType.{)('{')
        VARS
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('value')
        PsiElement(HaskellTokenType.::)('::')
        TYPEE
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('v')
        PsiElement(HaskellTokenType.,)(',')
        VARS
          VARID
            PsiElement(HaskellTokenType.varidRegexp)('children')
        PsiElement(HaskellTokenType.::)('::')
        TYPEE
          ATYPE
            PsiElement(HaskellTokenType.[)('[')
            CTYPE
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('Baz')
                ATYPE
                  TYVAR
                    VARID
                      PsiElement(HaskellTokenType.varidRegexp)('v')
            PsiElement(HaskellTokenType.])(']')
        PsiElement(HaskellTokenType.})('}')
      PsiElement(HaskellTokenType.deriving)('deriving')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('stock')
      PsiElement(HaskellTokenType.()('(')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Show')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Generic')
      PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.deriving)('deriving')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('anyclass')
      PsiElement(HaskellTokenType.()('(')
      QTYCLS
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Aeson')
        PsiElement(HaskellTokenType..)('.')
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('ToJSON')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Aeson')
        PsiElement(HaskellTokenType..)('.')
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('FromJSON')
      PsiElement(HaskellTokenType.))(')')
    DATADECL
      PsiElement(HaskellTokenType.data)('data')
      TYPEE
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Spam')
        ATYPE
          TYVAR
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('f')
      PsiElement(HaskellTokenType.=)('=')
      CONSTR
        CON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Spam1')
        ATYPE
          PsiElement(HaskellTokenType.()('(')
          CTYPE
            TYPEE
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('f')
              ATYPE
                OQTYCON
                  QTYCON
                    TYCON
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Person')
          PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.|)('|')
      CONSTR
        CON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Spam2')
        ATYPE
          PsiElement(HaskellTokenType.()('(')
          CTYPE
            TYPEE
              ATYPE
                TYVAR
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('f')
              ATYPE
                OQTYCON
                  QTYCON
                    TYCON
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Char')
          PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.deriving)('deriving')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('stock')
      PsiElement(HaskellTokenType.()('(')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Generic')
      PsiElement(HaskellTokenType.))(')')
    DERIVINGDECL
      PsiElement(HaskellTokenType.deriving)('deriving')
      PsiElement(HaskellTokenType.instance)('instance')
      CTYPE
        CLSCONTEXT
          ATYPE
            PsiElement(HaskellTokenType.()('(')
            CTYPE
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('Show')
                ATYPE
                  PsiElement(HaskellTokenType.()('(')
                  CTYPE
                    TYPEE
                      ATYPE
                        TYVAR
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('f')
                      ATYPE
                        OQTYCON
                          QTYCON
                            TYCON
                              CONID
                                PsiElement(HaskellTokenType.conidRegexp)('Person')
                  PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.,)(',')
            CTYPE
              TYPEE
                ATYPE
                  OQTYCON
                    QTYCON
                      TYCON
                        CONID
                          PsiElement(HaskellTokenType.conidRegexp)('Show')
                ATYPE
                  PsiElement(HaskellTokenType.()('(')
                  CTYPE
                    TYPEE
                      ATYPE
                        TYVAR
                          VARID
                            PsiElement(HaskellTokenType.varidRegexp)('f')
                      ATYPE
                        OQTYCON
                          QTYCON
                            TYCON
                              CONID
                                PsiElement(HaskellTokenType.conidRegexp)('Char')
                  PsiElement(HaskellTokenType.))(')')
            PsiElement(HaskellTokenType.))(')')
        PsiElement(HaskellTokenType.=>)('=>')
        CTYPE
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Show')
            ATYPE
              PsiElement(HaskellTokenType.()('(')
              CTYPE
                TYPEE
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('Spam')
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('f')
              PsiElement(HaskellTokenType.))(')')
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('aesonOptionsSpam')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Aeson')
                PsiElement(HaskellTokenType..)('.')
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Options')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('aesonOptionsSpam')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          QVAR
            QVARID
              CONID
                PsiElement(HaskellTokenType.conidRegexp)('Aeson')
              PsiElement(HaskellTokenType..)('.')
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('defaultOptions')
          PsiElement(HaskellTokenType.{)('{')
          QVAR
            QVARID
              CONID
                PsiElement(HaskellTokenType.conidRegexp)('Aeson')
              PsiElement(HaskellTokenType..)('.')
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('constructorTagModifier')
          PsiElement(HaskellTokenType.=)('=')
          EXP
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('drop')
            QOP
              QVAROP
                QVARSYM
                  VARSYM
                    PsiElement(HaskellTokenType.$)('$')
            QVAR
              QVARID
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('length')
            PsiElement(HaskellTokenType.@)('@')
            CTYPE
              TYPEE
                ATYPE
                  PsiElement(HaskellTokenType.[)('[')
                  PsiElement(HaskellTokenType.])(']')
                ATYPE
                  PSTRINGTOKEN
                    PsiElement(HaskellTokenType.")('"')
                    PsiElement(HaskellTokenType.STRINGTOKEN)('Spam')
                    PsiElement(HaskellTokenType.")('"')
          PsiElement(HaskellTokenType.})('}')