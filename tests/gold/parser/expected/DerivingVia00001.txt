Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('DerivingVia00001')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    NEWTYPEDECL
      PsiElement(HaskellTokenType.newtype)('newtype')
      TYCON
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('Foo')
      PsiElement(HaskellTokenType.=)('=')
      NEWCONSTR
        CON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Foo')
        ATYPE
          OQTYCON
            QTYCON
              TYCON
                CONID
                  PsiElement(HaskellTokenType.conidRegexp)('Bar')
      PsiElement(HaskellTokenType.deriving)('deriving')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('stock')
      PsiElement(HaskellTokenType.()('(')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Generic')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Eq')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Show')
      PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.deriving)('deriving')
      VARID
        PsiElement(HaskellTokenType.varidRegexp)('anyclass')
      PsiElement(HaskellTokenType.()('(')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Spam')
      PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.deriving)('deriving')
      PsiElement(HaskellTokenType.()('(')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('ToJSON')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('FromJSON')
      PsiElement(HaskellTokenType.))(')')
      PsiElement(HaskellTokenType.varidRegexp)('via')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Bar')
    DERIVINGDECL
      PsiElement(HaskellTokenType.deriving)('deriving')
      PsiElement(HaskellTokenType.varidRegexp)('via')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Eggs')
      PsiElement(HaskellTokenType.instance)('instance')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('ToJSON')
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Baz')