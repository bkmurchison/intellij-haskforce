Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('BlockArguments00001')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    GENDECL
      VARS
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('spec')
      PsiElement(HaskellTokenType.::)('::')
      CTYPE
        TYPEE
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Spec')
    FUNORPATDECL
      PAT
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('spec')
      RHS
        PsiElement(HaskellTokenType.=)('=')
        EXP
          PsiElement(HaskellTokenType.do)('do')
          STMTS
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('describe')
              PSTRINGTOKEN
                PsiElement(HaskellTokenType.")('"')
                PsiElement(HaskellTokenType.STRINGTOKEN)('BlockArguments')
                PsiElement(HaskellTokenType.")('"')
              PsiElement(HaskellTokenType.do)('do')
              STMTS
                EXP
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('it')
                  PSTRINGTOKEN
                    PsiElement(HaskellTokenType.")('"')
                    PsiElement(HaskellTokenType.STRINGTOKEN)('is parsed in HaskForce')
                    PsiElement(HaskellTokenType.")('"')
                  QOP
                    QVAROP
                      QVARSYM
                        VARSYM
                          PsiElement(HaskellTokenType.$)('$')
                  QVAR
                    QVARID
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('test')
                  PsiElement(HaskellTokenType.\)('\')
                  QCON
                    QCONID
                      CONID
                        PsiElement(HaskellTokenType.conidRegexp)('Resources')
                  PsiElement(HaskellTokenType.{)('{')
                  PsiElement(HaskellTokenType...)('..')
                  PsiElement(HaskellTokenType.})('}')
                  PsiElement(HaskellTokenType.->)('->')
                  EXP
                    PsiElement(HaskellTokenType.do)('do')
                    STMTS
                      EXP
                        QVAR
                          QVARID
                            VARID
                              PsiElement(HaskellTokenType.varidRegexp)('thing')
                        QOP
                          QVAROP
                            PsiElement(HaskellTokenType.`)('`')
                            QVARID
                              VARID
                                PsiElement(HaskellTokenType.varidRegexp)('shouldReturn')
                            PsiElement(HaskellTokenType.`)('`')
                        PsiElement(HaskellTokenType.[)('[')
                        PsiElement(HaskellTokenType.])(']')
                      EXP
                        QVAR
                          QVARID
                            VARID
                              PsiElement(HaskellTokenType.varidRegexp)('other')
                        QOP
                          QVAROP
                            QVARSYM
                              VARSYM
                                PsiElement(HaskellTokenType.Varsym)('>>=')
                        QVAR
                          QVARID
                            VARID
                              PsiElement(HaskellTokenType.varidRegexp)('expectPatternM')
                        PsiElement(HaskellTokenType.\)('\')
                        PsiElement(HaskellTokenType.[)('[')
                        PAT
                          QCON
                            QCONID
                              CONID
                                PsiElement(HaskellTokenType.conidRegexp)('Obj')
                          PsiElement(HaskellTokenType.{)('{')
                          QVAR
                            QVARID
                              VARID
                                PsiElement(HaskellTokenType.varidRegexp)('foo')
                          PsiElement(HaskellTokenType.,)(',')
                          QVAR
                            QVARID
                              VARID
                                PsiElement(HaskellTokenType.varidRegexp)('bar')
                          PsiElement(HaskellTokenType.})('}')
                        PsiElement(HaskellTokenType.])(']')
                        PsiElement(HaskellTokenType.->)('->')
                        EXP
                          PsiElement(HaskellTokenType.do)('do')
                          STMTS
                            EXP
                              QVAR
                                QVARID
                                  VARID
                                    PsiElement(HaskellTokenType.varidRegexp)('foo')
                              QOP
                                QVAROP
                                  PsiElement(HaskellTokenType.`)('`')
                                  QVARID
                                    VARID
                                      PsiElement(HaskellTokenType.varidRegexp)('shouldBe')
                                  PsiElement(HaskellTokenType.`)('`')
                              PsiElement(HaskellTokenType.integertoken)('1')
                            EXP
                              QVAR
                                QVARID
                                  VARID
                                    PsiElement(HaskellTokenType.varidRegexp)('bar')
                              QOP
                                QVAROP
                                  PsiElement(HaskellTokenType.`)('`')
                                  QVARID
                                    VARID
                                      PsiElement(HaskellTokenType.varidRegexp)('shouldBe')
                                  PsiElement(HaskellTokenType.`)('`')
                              PsiElement(HaskellTokenType.chartoken)(''b'')